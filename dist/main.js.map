{"mappings":"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","sources":["src/lib/format.js","src/index.js"],"sourcesContent":["import { latest as reference } from \"@mapbox/mapbox-gl-style-spec\";\nimport stringifyPretty from 'json-stringify-pretty-compact';\n\n// Borrowed from Mapbox GL JS v1.13 in order to keep consistent formatting with\n// other files formatted with this approach.\n\nfunction sortKeysBy(obj, reference) {\n  const result = {};\n  for (const key in reference) {\n    if (obj[key] !== undefined) {\n      result[key] = obj[key];\n\n      if (key === 'layout' || key === 'paint') {\n        result[key] = {};\n        for (const subKey of Object.keys(obj[key]).sort()) {\n          result[key][subKey] = obj[key][subKey];\n        }\n      }\n    }\n  }\n  for (const key in obj) {\n    if (result[key] === undefined) {\n      result[key] = obj[key];\n    }\n  }\n  return result;\n}\n\nexport default (style, spaces = 2) => {\n  style = sortKeysBy(style, reference.$root);\n\n  if (style.layers) {\n    style.layers = style.layers.map((layer) => sortKeysBy(layer, reference.layer));\n  }\n\n  return stringifyPretty(style, { indent: spaces });\n};\n","import format from \"./lib/format\";\n\nexport { format };\n"],"names":["_mapboxGlStyleSpec","require","_jsonStringifyPrettyCompact","_interopRequireDefault","obj","__esModule","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","sortKeysBy","reference","result","key","undefined","_iterator","keys","sort","_step","subKey","_default","style","spaces","arguments","$root","layers","map","layer","stringifyPretty","indent","exports","_format"],"version":3,"file":"main.js.map"}