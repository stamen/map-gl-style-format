{"mappings":"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","sources":["src/lib/format.js","src/index.js"],"sourcesContent":["import { latest as reference } from \"@mapbox/mapbox-gl-style-spec\";\nimport stringifyPretty from 'json-stringify-pretty-compact';\n\n// Borrowed from Mapbox GL JS v1.13 in order to keep consistent formatting with\n// other files formatted with this approach.\n\nfunction sortKeysBy(obj, reference) {\n  const result = {};\n  for (const key in reference) {\n    if (obj[key] !== undefined) {\n      result[key] = obj[key];\n\n      if (key === 'layout' || key === 'paint') {\n        result[key] = {};\n        for (const subKey of Object.keys(obj[key]).sort()) {\n          result[key][subKey] = obj[key][subKey];\n        }\n      }\n    }\n  }\n  for (const key in obj) {\n    if (result[key] === undefined) {\n      result[key] = obj[key];\n    }\n  }\n  return result;\n}\n\nexport default (style, spaces = 2) => {\n  style = sortKeysBy(style, reference.$root);\n\n  if (style.layers) {\n    style.layers = style.layers.map((layer) => sortKeysBy(layer, reference.layer));\n  }\n\n  return stringifyPretty(style, { indent: spaces });\n};\n","import format from \"./lib/format\";\n\nexport { format };\n"],"names":["_mapboxGlStyleSpec","require","_jsonStringifyPrettyCompact","_interopRequireDefault","obj","__esModule","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","minLen","_arrayLikeToArray","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","sortKeysBy","reference","result","key","undefined","_iterator","keys","sort","_step","subKey","_default","style","spaces","arguments","$root","layers","map","layer","stringifyPretty","indent","exports","_format"],"version":3,"file":"main.js.map"}