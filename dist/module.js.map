{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A,C;A,M,C,c,C,yB,E,C,a,C;I,K,E,I;A,C;A,M,C,c,C,yB,E,C,S,C;I,U,E,I;I,G,E,Q,C,G,G,C;Q,M,C,6B,C,C;I,C;A,C;;A,C;A,M,C,c,C,c,E,C,a,C;I,K,E,I;A,C;A,c,C,C,Y,I,C,C;;;ACCA,GAAA,CAAA,iDAAA,GAAA,4CAAA,CAAA,iCAAA;S,4C,C,G,E,C;I,M,C,G,I,G,C,U,G,G,G,C;Q,C,U,G;I,C;A,C;S,gD,C,C,E,c,E,C;I,G,C,E,G,M,C,M,K,C,c,C,C,M,C,Q,K,C,C,C;I,E,G,E,E,C;Q,E,E,K,C,O,C,C,M,E,G,iD,C,C,M,c,I,C,I,M,C,C,C,M,K,C,S,C;Y,E,E,E,E,C,G,E;Y,G,C,C,G,C;Y,G,C,C,G,Q,C,C,G,C;Y,C;Y,M,C,C;gB,C,E,C;gB,C,E,Q,C,C,G,C;oB,E,E,C,I,C,C,M,E,M,C,C;wB,I,E,I;oB,C;oB,M,C,C;wB,I,E,K;wB,K,E,C,C,C;oB,C;gB,C;gB,C,E,Q,C,C,C,E,E,C;oB,K,C,E;gB,C;gB,C,E,C;Y,C;Q,C;Q,K,C,G,C,S,C,C;I,C;I,G,C,gB,G,I,E,M,G,K,E,G;I,M,C,C;Q,C,E,Q,C,C,G,C;Y,E,G,E,C,I,C,C;Q,C;Q,C,E,Q,C,C,G,C;Y,G,C,I,G,E,C,I;Y,gB,G,I,C,I;Y,M,C,I;Q,C;Q,C,E,Q,C,C,C,G,E,C;Y,M,G,I;Y,G,G,G;Q,C;Q,C,E,Q,C,C,G,C;Y,G,C,C;gB,E,G,gB,I,E,C,C,Y,I,E,E,C,C;Y,C,Q,C;gB,E,E,M,E,K,C,G;Y,C;Q,C;I,C;A,C;S,iD,C,C,E,M,E,C;I,E,G,C,E,M;I,E,E,M,C,C,K,C,S,M,C,uC,C,C,E,M;I,G,C,C,G,M,C,S,C,Q,C,I,C,C,E,K,C,C,E,E;I,E,E,C,K,C,W,C,C,W,E,C,G,C,C,W,C,I;I,E,E,C,K,C,Q,C,K,C,M,M,C,K,C,I,C,C;I,E,E,C,K,C,yD,I,C,C,G,M,C,uC,C,C,E,M;A,C;S,uC,C,G,E,G,E,C;I,E,E,G,I,I,I,G,G,G,C,M,E,G,G,G,C,M;I,G,C,G,C,C,G,C,E,I,G,G,C,K,C,G,G,C,G,G,E,C,G,I,C,C,I,G,C,C;I,M,C,I;A,C;AAEA,EAAA,AAAA,6EAAA;AACA,EAAA,AAAA,0CAAA;SAESA,gCAAT,CAAoBC,GAApB,EAAyBC,SAAzB,EAAoC,CAApC;IACE,GAAA,CAAMC,MAAM,GAAG,CAAA;IAAA,CAAf;IACA,GAAA,CAAK,GAAA,CAAMC,GAAX,IAAkBF,SAAlB,CACE,EAAA,EAAID,GAAG,CAACG,GAAD,MAAUC,SAAjB,EAA4B,CAA5B;QACEF,MAAM,CAACC,GAAD,IAAQH,GAAG,CAACG,GAAD;QAEjB,EAAA,EAAIA,GAAG,KAAK,CAAR,WAAoBA,GAAG,KAAK,CAAhC,QAAyC,CAAzC;YACED,MAAM,CAACC,GAAD,IAAQ,CAAA;YAAA,CAAd;YADuC,GAAA,CAAA,SAAA,GAAA,gDAAA,CAElBE,MAAM,CAACC,IAAP,CAAYN,GAAG,CAACG,GAAD,GAAOI,IAAtB,KAFkB,KAAA;YAAA,GAAA,CAAA,CAAA;gBAEvC,GAAA,CAAA,SAAA,CAAA,CAAA,MAAA,KAAA,GAAA,SAAA,CAAA,CAAA,IAAA,IAAA,EAAmD,CAAnD;oBAAmD,GAAA,CAAxCC,MAAwC,GAAA,KAAA,CAAA,KAAA;oBACjDN,MAAM,CAACC,GAAD,EAAMK,MAAZ,IAAsBR,GAAG,CAACG,GAAD,EAAMK,MAAT;gBACvB,CAAA;YAJsC,CAAA,CAAA,KAAA,EAAA,GAAA,EAAA,CAAA;gBAAA,SAAA,CAAA,CAAA,CAAA,GAAA;YAAA,CAAA,QAAA,CAAA;gBAAA,SAAA,CAAA,CAAA;YAAA,CAAA;QAKxC,CAAA;IACF,CAAA;IAEH,GAAA,CAAK,GAAA,CAAML,IAAX,IAAkBH,GAAlB,CACE,EAAA,EAAIE,MAAM,CAACC,IAAD,MAAUC,SAApB,EACEF,MAAM,CAACC,IAAD,IAAQH,GAAG,CAACG,IAAD;IAGrB,MAAA,CAAOD,MAAP;AACD,CAAA;AAEc,GAAA,CAAA,8BAAA,GAAA,QAAA,CAAA,QAAA,CAACO,KAAD,EAAuB,CAAvB;IAAuB,GAAA,CAAfC,MAAe,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,MAAA,SAAA,GAAA,SAAA,CAAA,CAAA,IAAN,CAAM;IACpCD,KAAK,GAAGV,gCAAU,CAACU,KAAD,EAAQR,aAAAA,CAAUU,KAAlB;IAElB,EAAA,EAAIF,KAAK,CAACG,MAAV,EACEH,KAAK,CAACG,MAAN,GAAeH,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiB,QAAA,CAACC,KAAD,EAAhCL,CAAAA;QAAgC,MAAA,CAAWV,gCAAU,CAACe,KAAD,EAAQb,aAAAA,CAAUa,KAAlB;IAArB,CAAjB;IAGjB,MAAA,KAAO,iDAAA,CAAA,CAAA,WAAgBL,KAAhB,EAAuB,CAA9B;QAAgCM,MAAM,EAAEL,MAARK;IAAF,CAAvB;AACR,C;A,c,C,C,Y,8B;;;;;ADpCD,GAAA,CAAA,6BAAA,GAAA,4CAAA,CAAA,wBAAA;S,4C,C,G,E,C;I,M,C,G,I,G,C,U,G,G,G,C;Q,C,U,G;I,C;A,C","sources":["src/index.js","src/lib/format.js"],"sourcesContent":["import format from \"./lib/format\";\n\nexport { format };\n","import { latest as reference } from \"@mapbox/mapbox-gl-style-spec\";\nimport stringifyPretty from 'json-stringify-pretty-compact';\n\n// Borrowed from Mapbox GL JS v1.13 in order to keep consistent formatting with\n// other files formatted with this approach.\n\nfunction sortKeysBy(obj, reference) {\n  const result = {};\n  for (const key in reference) {\n    if (obj[key] !== undefined) {\n      result[key] = obj[key];\n\n      if (key === 'layout' || key === 'paint') {\n        result[key] = {};\n        for (const subKey of Object.keys(obj[key]).sort()) {\n          result[key][subKey] = obj[key][subKey];\n        }\n      }\n    }\n  }\n  for (const key in obj) {\n    if (result[key] === undefined) {\n      result[key] = obj[key];\n    }\n  }\n  return result;\n}\n\nexport default (style, spaces = 2) => {\n  style = sortKeysBy(style, reference.$root);\n\n  if (style.layers) {\n    style.layers = style.layers.map((layer) => sortKeysBy(layer, reference.layer));\n  }\n\n  return stringifyPretty(style, { indent: spaces });\n};\n"],"names":["sortKeysBy","obj","reference","result","key","undefined","Object","keys","sort","subKey","style","spaces","$root","layers","map","layer","indent"],"version":3,"file":"module.js.map","sourceRoot":"../"}